#!/bin/bash

colorschemes_dir="/etc/tty-colors/colorschemes"

print_colored_block() {
	hex_color="$1"
	printf "\e[48;2;$(printf "%d;%d;%d" 0x"${hex_color:0:2}" 0x"${hex_color:2:2}" 0x"${hex_color:4:2}")m   \e[0m"
}

print_colorschemes() {
	if [ ! -d "$colorschemes_dir" ]; then
		echo "Colorschemes directory doesn't exist"
	elif [ -z "$(ls -A $colorschemes_dir)" ]; then
		echo "No colorschemes found"
	else
		for scheme in "$colorschemes_dir"/*; do
			scheme_name=$(basename "$scheme")
			echo "$scheme_name"
			if [[ -n "$colored" ]]; then
				source "$scheme"
				counter=0
				for i in {1..16}; do
					hex_value="color$i"
					print_colored_block "${!hex_value}"
					((counter++))
					if ((counter % 8 == 0)); then
						echo
					fi
				done
			fi
		done
	fi
}

print_palette() {
	cnt=0
	for bkgrnd in 40 41 42 43 44 45 46 47; do
		printf '%b' "\033[${bkgrnd}m"
		for bold in 22 1; do
			printf '%b' "\033[${bold}m"
			for frgrnd in 30 31 32 33 34 35 36 37; do
				cntprt="$cnt"
				while [ "${#cntprt}" -lt 3 ]; do
					cntprt=" ${cntprt}"
				done
				printf '%b' "\033[${frgrnd}m ${cntprt} "
				cnt="$((cnt+1))"
			done
		done
		printf '%b\n' '\033[0m'
	done
}

set_tty_colors() {
	echo -en "\e]P0$color1"  # Background
	echo -en "\e]P1$color2"  # Red
	echo -en "\e]P2$color3"  # Green
	echo -en "\e]P3$color4"  # Yellow
	echo -en "\e]P4$color5"  # Blue
	echo -en "\e]P5$color6"  # Magenta
	echo -en "\e]P6$color7"  # Cyan
	echo -en "\e]P7$color8"  # White
	echo -en "\e]P8$color9"  # Black
	echo -en "\e]P9$color10" # Red
	echo -en "\e]PA$color11" # Green
	echo -en "\e]PB$color12" # Yellow
	echo -en "\e]PC$color13" # Blue
	echo -en "\e]PD$color14" # Magenta
	echo -en "\e]PE$color15" # Cyan
	echo -en "\e]PF$color16" # White
}

set_tty_colorscheme() {
	colorscheme="$1"
	if [ -f "$colorschemes_dir/$colorscheme" ]; then
		source "$colorschemes_dir/$colorscheme"
		for i in {1..6}; do
			set_tty_colors > /dev/tty"${i}"
		done
		if [[ "$TERM" == "linux" ]]; then
			clear
		fi
		echo "Setting $colorscheme colorscheme"
	else
		echo "Invalid colorscheme provided"
		exit 1
	fi
}

print_help() {
	echo "Usage: tty-colors [colorscheme]"
	echo "  -l    list colorschemes"
	echo "  -p    list colorschemes and print colors"
	echo "  -c    print current color palette"
	echo "  -h    print help"
}

if [ $# -eq 0 ]; then
	print_help
fi

while getopts "lpch" opt; do
	case "${opt}" in
		l) print_colorschemes;;
		p) colored="y" print_colorschemes;;
		c) print_palette;;
		h) print_help;;
		*) echo "Invalid option" && exit 1;;
	esac
done

shift $((OPTIND -1))

if [ $# -eq 1 ]; then
	set_tty_colorscheme "$1"
fi
