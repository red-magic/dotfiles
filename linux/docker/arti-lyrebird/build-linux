#!/bin/bash

container_arti="rust:slim-trixie"
container_lyrebird="golang:trixie"

build_arti() {
    set -euo pipefail

    arti_ver="1.5.0"
    arti_url="https://gitlab.torproject.org/tpo/core/arti/-/archive/arti-v${arti_ver}/arti-arti-v${arti_ver}.tar.gz"

    apt-get update -y
    apt-get install -y pkg-config libssl-dev libsqlite3-dev curl

    if ! curl --socks5 127.0.0.1:9150 -LO "${arti_url}"; then
        curl --connect-timeout 10 -LO "${arti_url}"
    fi

    tar xvf arti-arti-v${arti_ver}.tar.gz
    cd arti-arti-v${arti_ver}
    cargo build -p arti --locked --release
    strip -sv target/release/arti
    cp -v target/release/arti /out
}

build_lyrebird() {
    set -euo pipefail

    lyrebird_ver="0.6.1"
    lyrebird_url="https://gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/lyrebird/-/archive/lyrebird-${lyrebird_ver}/lyrebird-lyrebird-${lyrebird_ver}.tar.gz"

    if ! curl --socks5 127.0.0.1:9150 -LO "${lyrebird_url}"; then
        curl --connect-timeout 10 -LO "${lyrebird_url}"
    fi

    tar xvf lyrebird-lyrebird-${lyrebird_ver}.tar.gz
    cd lyrebird-lyrebird-${lyrebird_ver}
    CGO_ENABLED=1 go build -ldflags="-X main.lyrebirdVersion=${lyrebird_ver} -w -s" -v -o lyrebird ./cmd/lyrebird
    cp -v lyrebird /out
}

docker run --rm --network=host -v "$(pwd)":/out -w /build "${container_arti}" bash -c "$(declare -f build_arti) && build_arti"
docker run --rm --network=host -v "$(pwd)":/out -w /build "${container_lyrebird}" bash -c "$(declare -f build_lyrebird) && build_lyrebird"
