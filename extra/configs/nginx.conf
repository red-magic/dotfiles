worker_processes auto;
worker_cpu_affinity auto;

# Linux
user http;
#user nginx;

# BSD
#user www;

events {
	multi_accept on;
	worker_connections 1024;
}

http {
	types_hash_max_size 1024;
	types_hash_bucket_size 128;

	charset utf-8;

	include mime.types;
	default_type application/octet-stream;

	gzip on;
	gzip_types *;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_certificate /etc/letsencrypt/live/domain.tld/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/domain.tld/privkey.pem;

	ssl_conf_command ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
	ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;

	ssl_prefer_server_ciphers off;
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 1d;
	#ssl_ecdh_curve X25519:prime256v1:secp384r1;

	server {
		listen 123.123.123.123:443 ssl;
		http2 on;
		server_name domain.tld;

		root /var/www/domain;

		#location /files/ {
		#	autoindex on;
		#	autoindex_localtime on;
		#	autoindex_exact_size off;
		#}

		#location = /favicon.ico {
		#	alias /var/www/domain/resources/images/favicon.png;
		#}

		#location / {
		#	try_files $uri $uri.html $uri/ =404;
		#}

		#if ($request_uri ~ "^(.*)\.html$") {
		#	return 301 $1;
		#}

		error_page 404 /404.html;
		error_page 403 /403.html;

		location = /404.html { internal; }
		location = /403.html { internal; }

		#add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
		#add_header Onion-Location "http://verylongtordomain.onion$request_uri";
	}

	server {
		listen 123.123.123.123:443 ssl;
		server_name www.domain.tld;
		return 301 https://domain.tld$request_uri;
	}

	server {
		listen 123.123.123.123:80;
		server_name domain.tld www.domain.tld;
		return 301 https://domain.tld$request_uri;
	}

	server {
		listen 127.0.0.1:80;
		server_name verylongtordomain.onion;
	}
}
