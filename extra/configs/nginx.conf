worker_processes auto;
worker_cpu_affinity auto;

# Linux
#user http;
# BSD
#user www;

events {
	multi_accept on;
	# Linux
	#worker_connections 1024;
	# OpenBSD
	#worker_connections 512;
}

http {
	charset utf-8;
	types_hash_max_size 4096;
	include mime.types;
	default_type application/octet-stream;
	gzip on;
	gzip_comp_level 9;
	gzip_types text/html text/css image/png image/jpeg application/octet-stream;

	server {
		listen 123.123.123.123:80;
		listen 123.123.123.123:443 ssl http2;
		server_name website.com www.website.com;

		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_certificate /etc/letsencrypt/live/website.com/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/website.com/privkey.pem;
		#ssl_client_certificate /etc/ssl/private/cloudflare.crt;
		#ssl_verify_client on;

		ssl_conf_command ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256;
		ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
		
		ssl_prefer_server_ciphers off;
		ssl_session_cache shared:SSL:10m;
		ssl_session_timeout 10m;
		ssl_session_tickets off;

		#ssl_stapling on;
		#ssl_stapling_verify on;
		#ssl_trusted_certificate /etc/letsencrypt/live/website.com/chain.pem;
		#resolver 8.8.8.8 8.8.4.4 valid=300s;
		#resolver_timeout 5s;

		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
		add_header X-Frame-Options "SAMEORIGIN" always;
		add_header X-Content-Type-Options "nosniff" always;
		add_header X-XSS-Protection "1; mode=block" always;

		#try_files $uri $uri.html $uri/ =404;
		#rewrite ^(/.*)\.html(\?.*)?$ $1$2 permanent;
		#rewrite ^/(.*)/$ /$1 permanent;

		if ($host = 'www.website.com') {
			return 301 https://website.com$request_uri;
		}

		root /var/www/html;

		#location /files {
		#	autoindex on;
		#	autoindex_localtime on;
		#	autoindex_exact_size off;
		#}

		error_page 404 /404.html;
		error_page 403 /403.html;
	}

	server {
		listen 127.0.0.1:80;
		server_name verylongtordomain.onion;

		#try_files $uri $uri.html $uri/ =404;
		#rewrite ^(/.*)\.html(\?.*)?$ $1$2 permanent;
		#rewrite ^/(.*)/$ /$1 permanent;

		root /var/www/html;
	
		#location /files {
		#	autoindex on;
		#	autoindex_localtime on;
		#	autoindex_exact_size off;
		#}

		error_page 404 /404.html;
		error_page 403 /403.html;
	}
}
